const{components:c}=window.enmity;c.Alert,c.Button,c.FlatList;const Oe=c.Image;c.ImageBackground,c.KeyboardAvoidingView,c.Modal,c.Pressable,c.RefreshControl;const ut=c.ScrollView;c.SectionList,c.StatusBar,c.StyleSheet,c.Switch;const T=c.Text;c.TextInput,c.TouchableHighlight;const P=c.TouchableOpacity;c.TouchableWithoutFeedback,c.Touchable;const $=c.View;c.VirtualizedList,c.Form,c.FormArrow,c.FormCTA,c.FormCTAButton,c.FormCardSection,c.FormCheckbox;const j=c.FormDivider;c.FormHint,c.FormIcon,c.FormInput,c.FormLabel,c.FormRadio;const f=c.FormRow;c.FormSection,c.FormSelect,c.FormSubLabel;const ge=c.FormSwitch;c.FormTernaryCheckBox,c.FormText,c.FormTextColors,c.FormTextSizes;function dt(e){window.enmity.plugins.registerPlugin(e)}const F={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function ee(...e){return window.enmity.modules.bulk(...e)}function je(...e){return window.enmity.modules.getByProps(...e)}function Ue(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const M=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const C=window.enmity.modules.common.Storage,v=window.enmity.modules.common.Toasts,N=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const ze=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const U=window.enmity.modules.common.Navigation,ht=window.enmity.modules.common.NavigationNative,Ve=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const A=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function ft(e){return window.enmity.patcher.create(e)}var r="Dislate",z="1.3.3",pt="Translates text into a desired language.",Ye="stable",yt=[{name:"Acquite <3",id:"581573474296791211",profile:"https://github.com/acquitelol/"}],B={download:"https://raw.githubusercontent.com/acquitelol/dislate/main/dist/Dislate.js",repo:"https://github.com/acquitelol/dislate",build:"patch-1.8.4"},bt="#ff1f84",y={name:r,version:z,description:pt,release:Ye,authors:yt,plugin:B,color:bt};function V(e,t,a){window.enmity.settings.set(e,t,a)}function p(e,t,a){return window.enmity.settings.get(e,t,a)}function ue(e,t,a){return window.enmity.settings.getBoolean(e,t,a)}const wt="https://translate.googleapis.com/translate_a/single",Ge={fetch:({from:e,to:t,text:a})=>`${wt}?client=gtx&sl=${e}&tl=${t}&dt=t&q=${encodeURI(a)}`,parse:e=>e.json().then(t=>{if(t=t&&t[0]&&t[0][0]&&t[0].map(a=>a[0]).join(""),!t)throw new Error("Invalid Translation!");return t})};if(typeof fetch=="undefined")try{global.fetch=require("node-fetch")}catch{console.warn("Please make sure node-fetch is available")}async function vt(e,{fromLang:t,toLang:a}){const o=Ge.fetch({text:e,from:t,to:a});return await fetch(o).then(Ge.parse)}async function Et(e,{fromLang:t="detect",toLang:a="english"},o,i){return i?e:await vt(e,{fromLang:o[t],toLang:o[a]})}var te={string:Et},I=(e,t,a,o,i)=>{try{return e(...t)}catch(s){console.warn(`[${a}] The following error happened when trying to ${o} ${i!=null?i:"unspecificied label"}: ${s}`);return}};const Tt=(e,t,a)=>I(()=>{if(e){for(let o=0;o<e.length;o++)if(t(e[o],o,t))return e[o]}},[e,t],r,"find an item at",a),de=(e,t,a,o)=>I(()=>{if(e){e.length++,a++;for(let i=e.length-1;i>=a;i--)e[i]=e[i-1];return e[a-1]=t,e.length}},[e,t,a],r,"insert an item at",o),St=(e,t,a)=>I(()=>{let o=[];for(let i=0;i<e.length;i++)t(e[i],i,e)&&de(o,e[i],o.length,"filtering an array");return o},[e,t],r,"filtering an array at",a),$t=(e,t,a)=>{I(()=>{for(let o=0;o<e.length;o++)t(e[o],o,e)},[e,t],r,"loop through an array at",a)},Dt=(e,t,a)=>I(()=>{let o=[];for(let i=0;i<e.length;i++)de(o,t(e[i],i,e),o.length);return o},[e,t],r,"map an array at",a);var h={filterItem:St,findItem:Tt,forItem:$t,mapItem:Dt,insertItem:de};const It=(e,t)=>h.mapItem(e.split(t?/(?=[A-Z])/:"_"),a=>a[0].toUpperCase()+a.slice(1)).join(" "),Lt=(e,t)=>I(()=>{let a=h.mapItem(e.split(`
`),(o,i)=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}"${i==e.split(`
`).length-1?"":","}`},"formatting object");return a[0]=`{${a[0]}`,a[a.length-1]=`${a[a.length-1]}}`,a.join("")},[e],r,"formatting object at",t);var D={string:It,object:Lt};async function Ct(e,t){await I(async function(){var a;e.type==="storage"?await C.setItem(e.name,e.content):V(r,e.name,e.content);const o=(a=await C.getItem("dislate_store_state"))!=null?a:[];h.findItem(o,i=>i.name===e.name,"finding existing label in store state")||o.push(e),await C.setItem("dislate_store_state",JSON.stringify(o))},[e],r,"storing an item in plugin file or storage at",t)}var K={item:Ct};async function He(e){return await I(async function(){const t=await C.getItem("device_list");if(t)return JSON.parse(t);const a=(await ze.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=D.object(a,"fetching device list");return await K.item({name:"device_list",content:o,type:"storage"},"storing device list in storage"),JSON.parse(await C.getItem("device_list"))},[],r,"get the device list",e)}async function xt(e){await I(async function(){let t=M.DCDDeviceManager.device,a=await He();if(!t.includes("iPhone"))return;t=t.replace("iPhone","").replace(",",".");const o=parseFloat(t);async function i(){await C.getItem("dislate_incompatible_dialog")!=null||N.show({title:"Incompatible iPhone",body:`Please note that you're on an${a[M.DCDDeviceManager.device]}.
Some features of ${r} may behave in an unexpected manner.`,confirmText:"I understand",onConfirm:await K.item({name:"dislate_incompatible_dialog",content:"never show again until cleared",type:"storage"},"storing incompatible dialog to storage")})}(o<10.6&&o!=10.3||o==14.6||o==12.8)&&await i()},[],r,"checking if device is compatible",e)}var qe={getDeviceList:He,isCompatibleDevice:xt};async function We(){const e=await qe.getDeviceList();return{Plugin:{Version:z,Build:B.build.split("-")[1],Channel:Ye},Client:{Version:M.InfoDictionaryManager.Version,Build:M.InfoDictionaryManager.Build,Release:M.InfoDictionaryManager.ReleaseChannel,Bundle:M.InfoDictionaryManager.Identifier.split(".")[2]},Native:{Version:M.DCDDeviceManager.systemVersion,Device:e[M.DCDDeviceManager.device],Manufacturer:M.DCDDeviceManager.deviceManufacturer}}}async function _t(e,t){return await I(async function(){let a=[`**[${r}] Debug Information**
`];const o=await We();return h.forItem(Object.keys(e),i=>{Object.values(e[i]).some(s=>s)&&h.insertItem(a,`[**${i}**]`,a.length,"pushing to debug argument array"),h.forItem(Object.keys(e[i]),s=>{e[i][s]&&o[i][s]&&h.insertItem(a,`> **${s}**: ${o[i][s]}`,a.length,"pushing to debug argument array")})},"looping through debug options"),a.join(`
`)},[e],r,"creating debug info at",t)}var x={fetchDebugArguments:We,debugInfo:_t};function b(e){return window.enmity.assets.getIDByName(e)}var u={Translate:b("img_nitro_star"),Revert:b("ic_highlight"),Debug:b("debug"),Retry:b("ic_message_retry"),Failed:b("Small"),Cancel:b("ic_megaphone_nsfw_16px"),Delete:b("ic_message_delete"),Copy:b("toast_copy_link"),Open:b("ic_leave_stage"),Clipboard:b("pending-alert"),Add:b("ic_add_perk_24px"),Clock:b("clock"),Settings:{Toasts:{Context:b("toast_image_saved"),Settings:b("ic_selection_checked_24px"),Failed:b("ic_close_circle_24px")},TranslateFrom:b("ic_raised_hand_list"),TranslateTo:b("ic_activity_24px"),Debug:b("ic_rulebook_16px"),Initial:b("coffee"),Update:b("ic_upload"),Locale:b("ic_locale_24px")}};const kt={messageSpoofer:"69",copyEmbed:"1337",invisChat:"420",cutMessage:"512",dislate:"1002"},Rt={shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:.1,shadowRadius:4.65,elevation:8},Pt=(e,t)=>{v.open({content:t=="clipboard"?`Copied ${e} to clipboard.`:e,source:t=="clipboard"?u.Clipboard:u.Settings.Initial})},Mt=(e,t,a,o=186,i)=>I(()=>{let s=e.replace("#","");const m=(S,_,G)=>parseInt(S.substring(_[0],_[1]),G),l=m(s,[0,2],16),g=m(s,[2,4],16),E=m(s,[4,6],16);return(l+g+E)/(255*3)>o?a:t},[e,t,a,o],r,"checking if color should be light or dark at",i);var w={externalPlugins:kt,shadow:Rt,displayToast:Pt,filterColor:Mt};const{native:J}=window.enmity;function Ft(){J.reload()}J.version,J.build,J.device,J.version;async function Nt(){await I(async function(){const e=`${B.download}?${Math.floor(Math.random()*1001)}.js`,t=await(await ze.get(e)).text,a=t.match(/\d\.\d\.\d+/g)[0],o=t.match(/patch-\d\.\d\.\d+/g)[0];return!a||!o?fe(r,[z,B.build]):a!=z?he(e,a,"version"):o!=B.build?he(e,o.split("-")[1],"build"):fe(r,[z,B.build])},[B],r,"checking if latest version at","the async check for updates callback")}const he=(e,t,a)=>{N.show({title:"Update found",body:`A newer ${a} is available for ${r}. ${a=="build"?`
The version will remain at ${z}, but the build will update to ${t}.`:""}
Would you like to install ${a} \`${t}\` now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>Ke(e,t,a)})},fe=(e,[t,a])=>{console.log(`[${e}] Plugin is on the latest update, which is version ${t} and build ${a}`),N.show({title:"Already on latest",body:`${e} is already updated to the latest version.
Version: \`${t}\`
Build: \`${a.split("-")[1]}\``,confirmText:"Okay"})};async function Ke(e,t,a){await I(async function(){window.enmity.plugins.installPlugin(e,({data:o})=>{o=="installed_plugin"||o=="overridden_plugin"?N.show({title:`Updated ${r}`,body:`Successfully updated to ${a} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Not now",onConfirm:()=>Ft()}):console.log(`[Dislate] Plugin failed to update to ${a} ${t}.`)})},[e,t,a],r,"installing plugin at","new version available")}var At={checkForUpdates:Nt,showUpdateDialog:he,noUpdates:fe,installPlugin:Ke},Je;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Je||(Je={}));var ne;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ne||(ne={}));var ae;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(ae||(ae={}));var Xe;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(Xe||(Xe={}));var X;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(X||(X={}));var Qe;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Qe||(Qe={}));var Bt=({option:e,parent:t,debugOptions:a,onConfirmCallback:o})=>{const[i,s]=n.useState(p(r,t,{})[e]);n.useEffect(()=>{const l=p(r,t,{});l[e]||K.item({name:t,content:{...l,[e]:!1},type:"setting",override:{}})},[]);const m=A.createThemedStyleSheet({icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},itemDisabled:{color:d.ThemeColorMap.TEXT_MUTED},itemEnabled:{color:d.ThemeColorMap.INTERACTIVE_NORMAL}});return n.createElement(f,{key:e,label:e,onPress:()=>{const l=p(r,t,{});K.item({name:t,content:{...l,[e]:!l[e]},type:"setting",override:{}}),s(p(r,t,{})[e])},onLongPress:async function(){await o(await x.debugInfo({[t]:{[e]:!0}}),"single log")},leading:n.createElement(f.Icon,{style:m.icon,source:i?u.Settings.Toasts.Settings:u.Settings.Toasts.Failed}),trailing:()=>n.createElement(T,{style:[{paddingRight:10,paddingTop:5,paddingBottom:5},i?m.itemEnabled:m.itemDisabled]},a[t][e])})};const pe=window.enmity.modules.common.Components.General.Animated,Ot=window.enmity.modules.common.Components.General.Easing;var Ze=({label:e,content:t,type:a})=>{var o;const i=A.createThemedStyleSheet({button:{width:"92%",borderRadius:10,marginLeft:"4%",marginRight:"4%",...w.shadow},text:{color:"#f2f2f2",textAlign:"left",letterSpacing:.25,padding:10},textHeader:{fontSize:20,fontFamily:d.Fonts.PRIMARY_BOLD},textContent:{fontSize:16,fontFamily:d.Fonts.PRIMARY_NORMAL},image:{width:25,height:25,borderRadius:4,position:"absolute",right:0,margin:10}}),s=n.useRef(new pe.Value(1)).current,m=()=>{const E=()=>pe.timing(s,{toValue:0,duration:250,useNativeDriver:!0,easing:Ot.sin}).start();N.show({title:"Close Tip?",body:"You can either hide this information box forever, or just hide it until you open this page again.",confirmText:"Hide",cancelText:"Don't show again",onConfirm:()=>{E()},onCancel:async function(){await K.item({name:e,content:!0,type:"setting"},`storing dialog at ${e} in Dialog component`),E()}})},l={standard:{backgroundColor:"rgba(0, 0, 0, 0.5)",marginTop:20},floating:{position:"absolute",bottom:0,marginBottom:30,backgroundColor:"rgba(0, 0, 0, 0.8)"}},g={transform:[{scale:s}]};return p(r,e,!1)?n.createElement(n.Fragment,null):n.createElement(n.Fragment,null,n.createElement(pe.View,{style:g},n.createElement(P,{style:[i.button,(o=l[a])!=null?o:l.standard],onPress:m},n.createElement($,{style:{width:"100%",flexDirection:"row"}},n.createElement(Oe,{style:i.image,source:{uri:"https://i.imgur.com/rl1ga06.png"}})),n.createElement(T,{style:[i.text,i.textHeader]},e),n.createElement(T,{style:[i.text,i.textContent]},t))))},ye=({component:e})=>{const[t,a]=n.useState(),[o,i]=n.useState();return n.createElement(ut,{onTouchStart:s=>{a(s.nativeEvent.pageX),i(s.nativeEvent.pageY)},onTouchEnd:s=>{t-s.nativeEvent.pageX<-100&&o-s.nativeEvent.pageY<40&&o-s.nativeEvent.pageY>-40&&U.pop()}},e)},oe=({label:e,component:t})=>{const a=A.createThemedStyleSheet({text:{color:d.ThemeColorMap.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD,fontSize:12}});return n.createElement($,{style:{marginTop:10}},n.createElement(T,{style:[a.text,a.optionText]},e.toUpperCase()),t)};const jt=Ue("StaticSearchBarContainer");var Ut=({onConfirmCallback:e})=>{const[t,a]=n.useState([]),[o,i]=n.useState([]);n.useEffect(async function(){a(await x.fetchDebugArguments())},[]);const s=A.createThemedStyleSheet({button:{width:"90%",height:50,justifyContent:"center",alignItems:"center",backgroundColor:d.ThemeColorMap.HEADER_PRIMARY,borderRadius:10,marginLeft:"5%",marginRight:"5%",marginTop:20},text:{color:w.filterColor(d.ThemeColorMap.HEADER_PRIMARY[0],"#f2f2f2","#121212",.8,"buttons in debug info menu"),textAlign:"center",paddingLeft:10,paddingRight:10,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD},buttonText:{fontSize:16},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,...w.shadow}});return n.createElement(n.Fragment,null,n.createElement(jt,{placeholder:"Search Options",onChangeText:m=>i(m)}),n.createElement(ye,{component:n.createElement($,{style:{marginBottom:100}},h.mapItem(Object.keys(t),m=>n.createElement(oe,{label:m,component:n.createElement(n.Fragment,null,n.createElement($,{style:s.container},h.mapItem(h.filterItem(Object.keys(t[m]),l=>l.toLowerCase().includes(o)),(l,g,E)=>n.createElement(n.Fragment,null,n.createElement(Bt,{option:l,parent:m,debugOptions:t,onConfirmCallback:e}),g!==E.length-1?n.createElement(j,null):null),`list of debug information options in ${m}`)))})),n.createElement(P,{style:s.button,onPress:async function(){await e(await x.debugInfo(await x.fetchDebugArguments()),"full log")}},n.createElement(T,{style:[s.text,s.buttonText]},"Send All")),n.createElement(P,{style:s.button,onPress:async function(){const m=h.mapItem(Object.keys(t),l=>{var g;return{[l]:(g=p(r,l,{}))!=null?g:{}}}).reduce((l,g)=>({...l,...g}),{});await e(await x.debugInfo(m),"partial log")}},n.createElement(T,{style:[s.text,s.buttonText]},"Send Message")),n.createElement(Ze,{label:"Information",content:`You can either tap on each item to toggle it and press "Send Message", or you can long-press on an item to only send that item.

To close this dialog, press on it.`,type:"standard"}))}))};const et=Ve.createStackNavigator();var be=({name:e="Page",component:t=$}={})=>{const a=A.createThemedStyleSheet({container:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,flex:.5},card:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_PRIMARY,color:d.ThemeColorMap.TEXT_NORMAL},header:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},text:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.PRIMARY_NORMAL,fontSize:16,marginLeft:16,backgroundColor:"transparent"}}),o=({onPress:i,title:s})=>n.createElement(P,{onPress:i},n.createElement(T,{style:a.text},s));return n.createElement(ht.NavigationContainer,null,n.createElement(et.Navigator,{initialRouteName:e,style:a.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:a.card,headerStyle:a.header,headerTitleContainerStyle:{color:d.ThemeColorMap.HEADER_PRIMARY},headerTitleAlign:"center",safeAreaInsets:{top:0}}},n.createElement(et.Screen,{name:e,component:t,options:{headerTitleStyle:{color:"white",fontFamily:d.Fonts.PRIMARY_NORMAL},headerLeft:()=>n.createElement(o,{title:"Close",onPress:()=>{U.pop()}}),...Ve.TransitionPresets.ModalSlideFromBottomIOS}})))},Y=["detect","amharic","arabic","aymara","assamese","akan","azerbaijani","belarusian","bulgarian","bambara","bengali","corsican","czech","bosnian","danish","catalan","valencian","german","ewe","divehi","dhivehi","maldivian","english","greek","estonian","esperanto","basque","spanish","castilian","finnish","french","persian","irish","galician","guarani","western_frisian","gujarati","gaelic","scottish_gaelic","hausa","croatian","hebrew","hindi","haitian","haitian_creole","armenian","indonesian","hungarian","igbo","icelandic","italian","georgian","javanese","japanese","korean","kazakh","kannada","afrikaans","central_khmer","welsh","kurdish","kirghiz","kyrgyz","latin","luxembourgish","letzeburgesch","ganda","lao","latvian","lingala","lithuanian","malagasy","macedonian","malayalam","maori","marathi","norwegian_bokm\xE5l","mongolian","burmese","maltese","nepali","malay","dutch","flemish","chichewa","chewa","nyanja","norwegian","oromo","oriya","panjabi","punjabi","polish","quechua","pushto","pashto","russian","sanskrit","romanian","moldavian","moldovan","slovenian","kinyarwanda","slovak","sinhala","sinhalese","samoan","shona","somali","serbian","albanian","swahili","southern_sotho","swedish","sundanese","tamil","tajik","telugu","tagalog","turkmen","tigrinya","thai","tsonga","sindhi","portuguese","twi","turkish","tatar","urdu","ukrainian","uighur","uyghur","uzbek","vietnamese","yiddish","xhosa","chinese_traditional","chinese_simplified","zulu","yoruba"],ie=["auto","am","ar","ay","as","ak","az","be","bg","bm","bn","co","cs","bs","da","ca","ca","de","ee","dv","dv","dv","en","el","et","eo","eu","es","es","fi","fr","fa","ga","gl","gn","fy","gu","gd","gd","ha","hr","he","hi","ht","ht","hy","id","hu","ig","is","it","ka","jv","ja","ko","kk","kn","af","km","cy","ku","ky","ky","la","lb","lb","lg","lo","lv","ln","lt","mg","mk","ml","mi","mr","nb","mn","my","mt","ne","ms","nl","nl","ny","ny","ny","no","om","or","pa","pa","pl","qu","ps","ps","ru","sa","ro","ro","ro","sl","rw","sk","si","si","sm","sn","so","sr","sq","sw","st","sv","su","ta","tg","te","tl","tk","ti","th","ts","sd","pt","tw","tr","tt","ur","uk","ug","ug","uz","vi","yi","xh","zh-tw","zh-cn","zu","yo"],tt,nt,at;const[zt]=ee(F.byProps("setString")),ot=e=>({debug:async function(){const t=await x.debugInfo(await x.fetchDebugArguments(),"full log");return await new Promise(a=>{N.show({title:"Choose extra options",body:'You can customize the information sent with this command. If you do not want to customize the debug log, press "`Ignore`" instead to send the full log.',confirmText:"Customize",cancelText:"Ignore",onConfirm:()=>{const o=()=>n.createElement(Ut,{onConfirmCallback:(i,s)=>{U.pop(),v.open({content:`Sent ${s} log in #${e}.`,source:u.Settings.Toasts.Settings}),a({content:i})}});U.push(be,{component:o,name:`${r}: Customize`})},onCancel:()=>{v.open({content:`Sent full log in #${e}.`,source:u.Settings.Toasts.Settings}),a({content:t})}})})},clearStores:async function(){var t;const a=(t=JSON.parse(await C.getItem("dislate_store_state")))!=null?t:[];return h.forItem(a,async function(o){var i;o.type==="storage"?await C.removeItem(o.name):V(r,o.name,(i=o.override)!=null?i:!1)},"clearing state store"),await C.removeItem("dislate_store_state"),await new Promise(async function(o){v.open({content:`Cleared all ${r} stores.`,source:u.Settings.Toasts.Settings}),o({})})},download:async function(){return await new Promise(t=>{zt.setString(`${B.download}?${Math.floor(Math.random()*1001)}.js`),w.displayToast("download link","clipboard"),t({})})},Example:async function(){const t="Example Message. Enmity is a state or feeling of active opposition or hostility.",a=Math.floor(Math.random()*Y.length),o=Y[a],i=await te.string(t,{fromLang:"detect",toLang:o},Object.assign({},...Y.map((s,m)=>({[s]:ie[m]}))));return await new Promise(s=>{N.show({title:"Are you sure?",body:`**This is a testing message.**
You are about to send the following:

**English:** ${t}

**${D.string(o)}:** ${i}

Are you sure you want to send this? :3`,confirmText:"Yep, send it!",cancelText:"Nope, don't send it",onConfirm:()=>{v.open({content:`Sent test message in #${e}.`,source:u.Translate}),s({content:`**[${r}] Test Message**

**English:** ${t}
**${D.string(o)}:** ${i}`})},onCancel:()=>{v.open({content:"Cancelled translated message request.",source:u.Cancel}),s({})}})})}}),Vt=h.mapItem(Object.keys(ot("placeholder")),e=>({name:D.string(e,!0),displayName:D.string(e,!0),value:e}),"debug options formatted as a command format");var Yt={id:`${(tt=r)==null?void 0:tt.toLowerCase()}`,name:`${(nt=r)==null?void 0:nt.toLowerCase()}`,displayName:`${(at=r)==null?void 0:at.toLowerCase()}`,description:`Choose from a list of options for debugging in ${r}.`,displayDescription:`Choose from a list of options for debugging in ${r}.`,type:ne.Chat,inputType:ae.BuiltInText,options:[{name:"type",displayName:"type",description:"The type of command to execute.",displayDescription:"The type of command to execute.",type:X.String,choices:[...Vt],required:!0}],execute:async function(e,t){var a;const o=h.findItem(e,m=>m.name=="type").value,i=ot(t.channel.name),s=()=>{v.open({content:"Invalid command argument.",source:u.Clock})};return await((a=i[o])!=null?a:s)()}};function Gt(e,t,a,o){window.enmity.clyde.sendReply(e,t,a,o)}const Ht=h.mapItem(h.filterItem(Y,e=>e!=="detect","filter for everything except for detect"),e=>({name:D.string(e),displayName:D.string(e),value:e}),"language names");var qt={id:"translate",name:"translate",displayName:"translate",description:`Send a message using ${r} in any language chosen, using the Google Translate API.`,displayDescription:`Send a message using ${r} in any language chosen, using the Google Translate API.`,type:ne.Chat,inputType:ae.BuiltInText,options:[{name:"text",displayName:"text",description:`The text/message for ${r} to translate. Please note some formatting of mentions and emojis may break due to the API.`,displayDescription:`The text/message for ${r} to translate. Please note some formatting of mentions and emojis may break due to the API.`,type:X.String,required:!0},{name:"language",displayName:"language",description:`The language that ${r} will translate the text into. This can be any language from the list, except "Detect".`,displayDescription:`The language that ${r} will translate the text into. This can be any language from the list, except "Detect".`,type:X.String,choices:[...Ht],required:!0}],execute:async function(e,t){const a=h.findItem(e,l=>l.name=="text","translate text").value,o=h.findItem(e,l=>l.name=="language","translate language").value,i=Object.assign({},...Y.map((l,g)=>({[l]:ie[g]}))),s=await te.string(a,{fromLang:p(r,"DislateLangFrom","detect"),toLang:o},i),m=await te.string(s,{fromLang:p(r,"DislateLangFrom","detect"),toLang:p(r,"DislateLangTo","english")},i);return!s||!m?(Gt(t.channel.id,`Failed to send message in #${t.channel.name}`),{}):await new Promise(l=>{N.show({title:"Are you sure?",body:`The message **about to be sent** is:
\`${s}\`

In **${D.string(p(r,"DislateLangTo","english"))}**, this will translate to:
\`${m}\`

${p(r,"DislateBothLangToggle",!1)?`**Note: Sending original and translated**
`:""}Are you sure you want to send this? :3`,confirmText:"Yep, send it!",cancelText:"Nope, don't send it",onConfirm:()=>{v.open({content:`Sent message in #${t.channel.name}, which was translated into ${D.string(o)}.`,source:u.Translate}),l({content:p(r,"DislateBothLangToggle",!1)?`${a}

${s}`:s})},onCancel:()=>{v.open({content:"Cancelled translated message request.",source:u.Cancel}),l({})}})})}},Wt=["auto","amh","ara","aym","asm","aka","aze","bel","bul","bam","ben","cos","cze","bos","dan","cat","cat","ger","ewe","div","div","div","eng","gre","est","epo","baq","spa","spa","fin","fre","per","gle","glg","grn","fry","guj","gla","gla","hau","hrv","heb","hin","hat","hat","arm","ind","hun","ibo","ice","ita","geo","jav","jpn","kor","kaz","kan","afr","khm","wel","kur","kir","kir","lat","ltz","ltz","lug","lao","lav","lin","lit","mlg","mac","mal","mao","mar","nob","mon","bur","mlt","nep","may","dut","dut","nya","nya","nya","nor","orm","ori","pan","pan","pol","que","pus","pus","rus","san","rum","rum","rum","slv","kin","slo","sin","sin","smo","sna","som","srp","alb","swa","sot","swe","sun","tam","tgk","tel","tgl","tuk","tir","tha","tso","snd","por","twi","tur","tat","urd","ukr","uig","uig","uzb","vie","yid","xho","chit","chis","zul","yor"];const se=window.enmity.modules.common.Components.General.Animated;var Kt=({language:e,languages:t})=>{const a=Object.assign({},...ie.map((E,S)=>({[E]:Wt[S]}))),o=n.useRef(new se.Value(1)).current,i=()=>se.spring(o,{toValue:1.05,duration:250,useNativeDriver:!0}).start(),s=()=>se.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start(),m={transform:[{scale:o}]},l=A.createThemedStyleSheet({container:{width:"95%",marginLeft:"2.5%",borderRadius:10,marginTop:15,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY}}),g=E=>{V(r,`DislateLang${p(r,"DislateLangFilter")?"To":"From"}`,E),v.open({content:`Set ${t[E].toUpperCase()} as Language to Translate ${p("Dislate","DislateLangFilter")?"to":"from"}.`,source:p(r,"DislateLangFilter")?u.Settings.TranslateTo:u.Settings.TranslateFrom}),U.pop()};return n.createElement(n.Fragment,null,n.createElement(n.Fragment,null,n.createElement(P,{onPress:()=>g(e),onLongPress:()=>g(e),onPressIn:i,onPressOut:s},n.createElement(se.View,{style:[m,l.container]},n.createElement(f,{label:D.string(e),subLabel:`Aliases: ${t[e]}, ${a[t[e]]}`,trailing:f.Arrow,leading:n.createElement(f.Icon,{style:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},source:e==p(r,`DislateLang${p(r,"DislateLangFilter")?"To":"From"}`)?u.Settings.Toasts.Settings:u.Add})})))))};const Jt=Ue("StaticSearchBarContainer");var it=({languages:e})=>{const[t,a]=n.useState([]);return n.createElement(n.Fragment,null,n.createElement(Jt,{placeholder:"Search Language",onChangeText:o=>a(o)}),n.createElement(ye,{component:n.createElement(n.Fragment,null,n.createElement($,{style:{marginBottom:15}},h.mapItem(h.filterItem(Object.keys(e),o=>o.toLowerCase().includes(t),"getting searched languages"),o=>p(r,"DislateLangFilter")&&o=="detect"?n.createElement(n.Fragment,null):n.createElement(Kt,{language:o,languages:e}),"listing different possible languages")))}),n.createElement(Ze,{label:"Important",content:`You can either press or long-press on an item to select it as the language to translate ${p(r,"DislateLangFilter")?"to":"from"}. Your current selected language has a \u2713 next to it.

To hide this dialog, press on it.`,type:"floating"}))};const re=window.enmity.modules.common.Components.General.Animated,[we,Xt]=ee(F.byProps("transitionToGuild"),F.byProps("setString"));var Qt=({name:e,version:t,plugin:a,authors:o})=>{const i=A.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...w.shadow},image:{width:75,height:75,borderRadius:10,...w.shadow},mainText:{opacity:.975,letterSpacing:.25},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:d.ThemeColorMap.HEADER_SECONDARY,fontSize:12.75}}),s=n.useRef(new re.Value(1)).current,m=()=>re.spring(s,{toValue:1.1,duration:10,useNativeDriver:!0}).start(),l=()=>re.spring(s,{toValue:1,duration:250,useNativeDriver:!0}).start(),g=()=>we.openURL(a.repo),E={transform:[{scale:s}]};return n.createElement(n.Fragment,null,n.createElement($,{style:i.container},n.createElement(P,{onPress:g,onPressIn:m,onPressOut:l},n.createElement(re.View,{style:E},n.createElement(Oe,{style:[i.image],source:{uri:"https://i.imgur.com/rl1ga06.png"}}))),n.createElement($,{style:i.textContainer},n.createElement(P,{onPress:()=>we.openURL(a.repo)},n.createElement(T,{style:[i.mainText,i.header]},e)),n.createElement($,{style:{flexDirection:"row"}},n.createElement(T,{style:[i.mainText,i.subHeader]},"A project by"),h.mapItem(o,(S,_,G)=>n.createElement(P,{onPress:()=>we.openURL(S.profile)},n.createElement(T,{style:[i.mainText,i.subHeader,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},S.name,_<G.length-1?",":null)))),n.createElement($,null,n.createElement(P,{style:{flexDirection:"row"},onPress:async function(){const S=await x.fetchDebugArguments();Xt.setString(await x.debugInfo(Object.keys(S))),w.displayToast("debug information","clipboard")}},n.createElement(T,{style:[i.mainText,i.subHeader]},"Version:"),n.createElement(T,{style:[i.mainText,i.subHeader,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},t))))))};const[Zt,en]=ee(F.byProps("transitionToGuild"),F.byProps("setString"));var tn=({settings:e,manifest:{name:t,version:a,plugin:o,authors:i,release:s},languages:m})=>{const l=A.createThemedStyleSheet({icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:d.ThemeColorMap.TEXT_MUTED},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,...w.shadow},subheaderText:{color:d.ThemeColorMap.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD,fontSize:14}});return n.createElement(n.Fragment,null,n.createElement(ye,{component:n.createElement(n.Fragment,null,n.createElement(Qt,{name:t,version:a,plugin:o,authors:i}),n.createElement($,{style:{marginTop:20}},n.createElement(oe,{label:"Language",component:n.createElement(n.Fragment,null,n.createElement($,{style:l.container},n.createElement(f,{label:"Translate From",leading:n.createElement(f.Icon,{style:l.icon,source:u.Settings.TranslateFrom}),trailing:()=>{var g;return n.createElement(T,{style:l.item},(g=D.string(p(t,"DislateLangFrom","detect")))!=null?g:"N/A")},onPress:()=>{V(t,"DislateLangFilter",!1);const g=()=>n.createElement(it,{languages:m});U.push(be,{component:g,name:`${t}: Language From`})},onLongPress:()=>w.displayToast('Open a new page allowing you to choose a language that you can translate from. The default is "Detect".',"tooltip")}),n.createElement(j,null),n.createElement(f,{label:"Translate To",leading:n.createElement(f.Icon,{style:l.icon,source:u.Settings.TranslateTo}),trailing:()=>{var g;return n.createElement(T,{style:l.item},(g=D.string(p(t,"DislateLangTo","english")))!=null?g:"N/A")},onPress:()=>{V(t,"DislateLangFilter",!0);const g=()=>n.createElement(it,{languages:m});U.push(be,{component:g,name:`${t}: Language To`})},onLongPress:()=>w.displayToast('Open a new page allowing you to choose a language that you can translate to. The default is "English".',"tooltip")}),n.createElement(j,null),n.createElement(f,{label:"Abbreviate Language",leading:n.createElement(f.Icon,{style:l.icon,source:u.Retry}),subLabel:"Label language in a shorter form when translating (English \u279D EN).",onLongPress:()=>w.displayToast("Convert the full language name to an abbreviation when translating someone else's message. (test [English] \u279D test [EN])","tooltip"),trailing:n.createElement(ge,{value:e.getBoolean("DislateLangAbbr",!1),onValueChange:()=>{e.toggle("DislateLangAbbr",!1),v.open({content:`Successfully ${e.getBoolean("DislateLangAbbr",!1)?"enabled":"disabled"} language abbreviations.`,source:u.Settings.Toasts.Settings})}})}),n.createElement(j,null),n.createElement(f,{label:"Send Original",leading:n.createElement(f.Icon,{style:l.icon,source:u.Settings.Locale}),subLabel:"Send both the Original and Translated message when using /translate.",onLongPress:()=>w.displayToast("When using the /translate command, send both the original message and the translated message at once.","tooltip"),trailing:n.createElement(ge,{value:e.getBoolean("DislateBothLangToggle",!1),onValueChange:()=>{e.toggle("DislateBothLangToggle",!1),v.open({content:`Now sending ${e.getBoolean("DislateBothLangToggle",!1)?"original and translated":"only translated"} message.`,source:u.Settings.Toasts.Settings})}})})))}),n.createElement(oe,{label:"Utility",component:n.createElement(n.Fragment,null,n.createElement($,{style:l.container},n.createElement(f,{label:"Initialisation Toasts",leading:n.createElement(f.Icon,{style:l.icon,source:u.Settings.Initial}),subLabel:`Toggle initialisation toasts to display loading state of ${t}.`,onLongPress:()=>w.displayToast(`When Enmity is first started, show toasts based on ${t}'s current state (starting, failed, retrying, etc)`,"tooltip"),trailing:n.createElement(ge,{value:e.getBoolean("toastEnable",!1),onValueChange:()=>{e.toggle("toastEnable",!1),v.open({content:`Successfully ${e.getBoolean("toastEnable",!1)?"enabled":"disabled"} Load Toasts.`,source:u.Settings.Toasts.Settings})}})}),n.createElement(j,null),n.createElement(f,{label:"Copy Debug Info",subLabel:`Copy useful debug information like version and build of ${t} to clipboard.`,onLongPress:()=>w.displayToast(`Copy the full debug log to clipboard including ${t}'s Version, Build, and Release, Enmity's Version and Build, etc.`,"tooltip"),leading:n.createElement(f.Icon,{style:l.icon,source:u.Copy}),trailing:f.Arrow,onPress:async function(){const g=await x.fetchDebugArguments();en.setString(await x.debugInfo(Object.keys(g))),w.displayToast("debug information","clipboard")}}),n.createElement(j,null),n.createElement(f,{label:"Clear Stores",subLabel:`Void most of the settings and stores used throughout ${t} to store data locally.`,onLongPress:()=>w.displayToast(`Clear stores and settings throughout ${t} including the settings to hide popups forever and the list of device codes.`,"tooltip"),leading:n.createElement(f.Icon,{style:l.icon,source:u.Delete}),trailing:f.Arrow,onPress:async function(){var g;const E=(g=JSON.parse(await C.getItem("dislate_store_state")))!=null?g:[];h.forItem(E,async function(S){var _;S.type==="storage"?await C.removeItem(S.name):V(t,S.name,(_=S.override)!=null?_:!1)},"clearing state store"),await C.removeItem("dislate_store_state"),v.open({content:`Cleared all ${t} stores.`,source:u.Settings.Toasts.Settings})}})))}),n.createElement(oe,{label:"Source",component:n.createElement(n.Fragment,null,n.createElement($,{style:l.container},n.createElement(f,{label:"Check for Updates",subLabel:`Search for any ${t} updates and notify you if an update is available.`,onLongPress:()=>w.displayToast(`Search GitHub for any new version or build of ${t} and prompts you to update, and then prompts you to restart Enmity afterwards.`,"tooltip"),leading:n.createElement(f.Icon,{style:l.icon,source:u.Settings.Update}),trailing:f.Arrow,onPress:async function(){await At.checkForUpdates()}}),n.createElement(j,null),n.createElement(f,{label:"Source",subLabel:`Open the repository of ${t} externally.`,onLongPress:()=>w.displayToast(`Opens the repository of ${t} on GitHub in an external page to view any source code of the plugin.`,"tooltip"),leading:n.createElement(f.Icon,{style:l.icon,source:u.Open}),trailing:f.Arrow,onPress:()=>{Zt.openURL(o.repo)}})))})),n.createElement(T,{style:l.subheaderText},`Build: (${o.build.split("-")[1]}) Release: (${s})`))}))};const[st,nn,an]=ee(F.byProps("openLazy","hideActionSheet"),F.byProps("getChannel","getDMFromUserId"),F.byName("Icon")),ve=ft("dislate"),Ee=Object.assign({},...Y.map((e,t)=>({[e]:ie[t]})));let le=[{invalid_id:"acquite sucks"}];const on={...y,commands:[],onStart(){this.commands=[Yt,qt];let e=0;const t=3;async function a(){var o;try{e++;const i=je("getMessage","getMessages"),s=je("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue");let m=ue(y.name,"toastEnable",!1);await qe.isCompatibleDevice();for(const l of["MESSAGE_UPDATE"])try{s==null||s.dispatch({type:l,message:{}})}catch(g){console.error(`[${y.name} Local Error When Waking Up FluxDispatcher ${g}]`)}console.log(`[${y.name}] delayed start attempt ${e}/${t}.`),m&&((o=v)==null||o.open({content:`[${y.name}] start attempt ${e}/${t}.`,source:u.Debug}));try{ve.before(st,"openLazy",(l,[g,E],S)=>{E==="MessageLongPressActionSheet"&&g.then(_=>{const G=ve.after(_,"default",(sn,H,O)=>{var Te,Se,$e,De,Ie,Le,Ce,xe,_e,ke,Re,Pe,Me,Fe,Ne,Ae,Be;G();let Q="Translate",Z=0;if(!(O!=null&&O.props))return console.log(`[${y.name} Local Error: Property "props" Does not Exist on "res"]`),O;let q=(Ie=(De=($e=(Se=(Te=O==null?void 0:O.props)==null?void 0:Te.children)==null?void 0:Se.props)==null?void 0:$e.children)==null?void 0:De.props)==null?void 0:Ie.children[1];if(!q)return console.log(`[${y.name} Local Error: 'finalLocation' seems to be undefined!]`),O;h.forItem(Object.values(w.externalPlugins),R=>{h.findItem(q,L=>{if(L.key!==w.externalPlugins.dislate)return L.key===R},"external plugin list")&&Z++},"looping through external plugin keys"),h.findItem(q,R=>{var L;return((L=R.props)==null?void 0:L.message)==="Reply"},"reply button")&&Z++,h.findItem(q,R=>{var L;return((L=R.props)==null?void 0:L.message)==="Edit Message"},"edit message button")&&Z++;const k=i.getMessage((Ce=(Le=H[0])==null?void 0:Le.message)==null?void 0:Ce.channel_id,(_e=(xe=H[0])==null?void 0:xe.message)==null?void 0:_e.id);if(!(k!=null&&k.content)&&!((Re=(ke=H[0])==null?void 0:ke.message)!=null&&Re.content))return console.log(`[${y.name}] No message content.`),O;const ce=(Fe=k==null?void 0:k.id)!=null?Fe:(Me=(Pe=H[0])==null?void 0:Pe.message)==null?void 0:Me.id,rt=(Be=k==null?void 0:k.content)!=null?Be:(Ae=(Ne=H[0])==null?void 0:Ne.message)==null?void 0:Ae.content,me=h.findItem(le,R=>Object.keys(R)[0]===ce,"cache object");Q=me?"Revert":"Translate";const lt=n.createElement(f,{key:w.externalPlugins.dislate,label:Q,leading:n.createElement(an,{source:Q==="Translate"?u.Translate:u.Revert}),onPress:()=>{const R=p(y.name,"DislateLangFrom","detect"),L=p(y.name,"DislateLangTo","english"),W=Q==="Translate";te.string(k.content,{fromLang:R,toLang:L},Ee,!W).then(ct=>{const mt={type:"MESSAGE_UPDATE",message:{...k,content:`${W?ct:me[ce]} ${W?`\`[${ue(y.name,"DislateLangAbbr",!1)?Ee[L].toUpperCase():D.string(L)}]\``:""}`,guild_id:nn.getChannel(k.channel_id).guild_id},log_edit:!1};s.dispatch(mt),v.open({content:W?`Modified message to ${D.string(p(y.name,"DislateLangTo","english"))}.`:"Reverted message back to original state.",source:u.Translate}),W?le.unshift({[ce]:rt}):le=h.filterItem(le,gt=>gt!==me,"cached data override")}),st.hideActionSheet()}});h.insertItem(q,lt,Z,"insert translate button")})})})}catch(l){console.error(`[${y.name}] Local ${l} At Intermediate Level`),m&&v.open({content:`[${y.name}] failed to open action sheet.`,source:u.Retry})}}catch(i){console.error(`[${y.name}] Local ${i} At Top Level`);let s=ue(y.name,"toastEnable",!1);if(e<t){const m=`[${y.name}] failed to initialise. Trying again in ${e}0s.`;console.warn(m),s&&v.open({content:m,source:u.Retry}),setTimeout(a,e*1e4)}else{const m=`[${y.name}] failed to initialise. Giving up.`;console.error(m),s&&v.open({content:m,source:u.Failed})}}}a()},onStop(){ve.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){return n.createElement(tn,{settings:e,manifest:{name:y.name,version:y.version,plugin:y.plugin,authors:y.authors,release:y.release},languages:Ee})}};dt(on);
