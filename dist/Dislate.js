const{components:c}=window.enmity;c.Alert,c.Button,c.FlatList;const Oe=c.Image;c.ImageBackground,c.KeyboardAvoidingView,c.Modal,c.Pressable,c.RefreshControl;const ut=c.ScrollView;c.SectionList,c.StatusBar,c.StyleSheet,c.Switch;const T=c.Text;c.TextInput,c.TouchableHighlight;const R=c.TouchableOpacity;c.TouchableWithoutFeedback,c.Touchable;const $=c.View;c.VirtualizedList,c.Form,c.FormArrow,c.FormCTA,c.FormCTAButton,c.FormCardSection,c.FormCheckbox;const O=c.FormDivider;c.FormHint,c.FormIcon,c.FormInput,c.FormLabel,c.FormRadio;const h=c.FormRow;c.FormSection,c.FormSelect,c.FormSubLabel;const ge=c.FormSwitch;c.FormTernaryCheckBox,c.FormText,c.FormTextColors,c.FormTextSizes;function dt(e){window.enmity.plugins.registerPlugin(e)}const P={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,n)=>window.enmity.modules.filters.byName(e,n),byTypeName:(e,n)=>window.enmity.modules.filters.byTypeName(e,n),byDisplayName:(e,n)=>window.enmity.modules.filters.byDisplayName(e,n)};function ee(...e){return window.enmity.modules.bulk(...e)}function je(...e){return window.enmity.modules.getByProps(...e)}function Ue(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const V=window.enmity.modules.common.Native,t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const C=window.enmity.modules.common.Storage,v=window.enmity.modules.common.Toasts,F=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const ze=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const j=window.enmity.modules.common.Navigation,ht=window.enmity.modules.common.NavigationNative,Ve=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const M=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function ft(e){return window.enmity.patcher.create(e)}var s="Dislate",Y="1.3.2",pt="Translates text into a desired language.",Ye="stable",yt=[{name:"Acquite <3",id:"581573474296791211",profile:"https://github.com/acquitelol/"}],N={download:"https://raw.githubusercontent.com/acquitelol/dislate/main/dist/Dislate.js",repo:"https://github.com/acquitelol/dislate",build:"patch-1.8.3"},bt="#ff1f84",p={name:s,version:Y,description:pt,release:Ye,authors:yt,plugin:N,color:bt};function A(e,n,a){window.enmity.settings.set(e,n,a)}function E(e,n,a){return window.enmity.settings.get(e,n,a)}function U(e,n,a){return window.enmity.settings.getBoolean(e,n,a)}const wt="https://translate.googleapis.com/translate_a/single",Ge={fetch:({from:e,to:n,text:a})=>`${wt}?client=gtx&sl=${e}&tl=${n}&dt=t&q=${encodeURI(a)}`,parse:e=>e.json().then(n=>{if(n=n&&n[0]&&n[0][0]&&n[0].map(a=>a[0]).join(""),!n)throw new Error("Invalid Translation!");return n})};if(typeof fetch=="undefined")try{global.fetch=require("node-fetch")}catch{console.warn("Please make sure node-fetch is available")}async function vt(e,{fromLang:n,toLang:a}){const o=Ge.fetch({text:e,from:n,to:a});return await fetch(o).then(Ge.parse)}async function Et(e,{fromLang:n="detect",toLang:a="english"},o,i){return i?e:await vt(e,{fromLang:o[n],toLang:o[a]})}var te={string:Et},D=(e,n,a,o,i)=>{try{return e(...n)}catch(l){console.warn(`[${a}] The following error happened when trying to ${o} ${i!=null?i:"unspecificied label"}: ${l}`);return}};const St=(e,n,a)=>D(()=>{if(e){for(let o=0;o<e.length;o++)if(n(e[o],o,n))return e[o]}},[e,n],s,"find an item at",a),ue=(e,n,a,o)=>D(()=>{if(e){e.length++,a++;for(let i=e.length-1;i>=a;i--)e[i]=e[i-1];return e[a-1]=n,e.length}},[e,n,a],s,"insert an item at",o),Tt=(e,n,a)=>D(()=>{let o=[];for(let i=0;i<e.length;i++)n(e[i],i,e)&&ue(o,e[i],o.length,"filtering an array");return o},[e,n],s,"filtering an array at",a),$t=(e,n,a)=>{D(()=>{for(let o=0;o<e.length;o++)n(e[o],o,e)},[e,n],s,"loop through an array at",a)},Dt=(e,n,a)=>D(()=>{let o=[];for(let i=0;i<e.length;i++)ue(o,n(e[i],i,e),o.length);return o},[e,n],s,"map an array at",a);var f={filterItem:Tt,findItem:St,forItem:$t,mapItem:Dt,insertItem:ue};const It=(e,n)=>f.mapItem(e.split(n?/(?=[A-Z])/:"_"),a=>a[0].toUpperCase()+a.slice(1)).join(" "),Lt=(e,n)=>D(()=>{let a=f.mapItem(e.split(`
`),(o,i)=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}"${i==e.split(`
`).length-1?"":","}`},"formatting object");return a[0]=`{${a[0]}`,a[a.length-1]=`${a[a.length-1]}}`,a.join("")},[e],s,"formatting object at",n),Ct=(e,n)=>D(()=>{const a={};return f.forItem(Object.keys(e),o=>{Object.assign(a,{[e[o]]:o})},"reversing object"),a},[e],s,"reversing object at",n);var I={string:It,object:Lt,reverse:Ct};async function xt(e,n){await D(async function(){var a;e.type==="storage"?await C.setItem(e.name,e.content):A(s,e.name,e.content);const o=(a=await C.getItem("dislate_store_state"))!=null?a:[];f.findItem(o,i=>i.name===e.name,"finding existing label in store state")||o.push(e),await C.setItem("dislate_store_state",JSON.stringify(o))},[e],s,"storing an item in plugin file or storage at",n)}var de={item:xt};async function He(e){return await D(async function(){const n=await C.getItem("device_list");if(n)return JSON.parse(n);const a=(await ze.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=I.object(a,"fetching device list");return await de.item({name:"device_list",content:o,type:"storage"},"storing device list in storage"),JSON.parse(await C.getItem("device_list"))},[],s,"get the device list",e)}async function _t(e){await D(async function(){let n=V.DCDDeviceManager.device,a=await He();if(!n.includes("iPhone"))return;n=n.replace("iPhone","").replace(",",".");const o=parseFloat(n);async function i(){await C.getItem("dislate_incompatible_dialog")!=null||F.show({title:"Incompatible iPhone",body:`Please note that you're on an${a[V.DCDDeviceManager.device]}.
Some features of ${s} may behave in an unexpected manner.`,confirmText:"I understand",onConfirm:await de.item({name:"dislate_incompatible_dialog",content:"never show again until cleared",type:"storage"},"storing incompatible dialog to storage")})}(o<10.6&&o!=10.3||o==14.6||o==12.8)&&await i()},[],s,"checking if device is compatible",e)}var qe={getDeviceList:He,isCompatibleDevice:_t};async function We(){const e=await qe.getDeviceList();return{"Plugin Version":Y,"Plugin Build":N.build.split("-")[1],"Release Channel":Ye,"Discord Version":V.InfoDictionaryManager.Version,"Discord Build":V.InfoDictionaryManager.Build,"Software Version":V.DCDDeviceManager.systemVersion,Device:e[V.DCDDeviceManager.device]}}async function kt(e,n){return await D(async function(){let a=[`**[${s}] Debug Information**`];const o=await We();return f.forItem(e,i=>{o[i]&&f.insertItem(a,`> **${i}**: ${o[i]}`,a.length,"pushing to debug argument array")},"looping through debug options"),a.join(`
`)},[e],s,"creating debug info at",n)}var x={fetchDebugArguments:We,debugInfo:kt};function y(e){return window.enmity.assets.getIDByName(e)}var u={Translate:y("img_nitro_star"),Revert:y("ic_highlight"),Debug:y("debug"),Retry:y("ic_message_retry"),Failed:y("Small"),Cancel:y("ic_megaphone_nsfw_16px"),Delete:y("ic_message_delete"),Copy:y("toast_copy_link"),Open:y("ic_leave_stage"),Clipboard:y("pending-alert"),Add:y("ic_add_perk_24px"),Clock:y("clock"),Settings:{Toasts:{Context:y("toast_image_saved"),Settings:y("ic_selection_checked_24px"),Failed:y("ic_close_circle_24px")},TranslateFrom:y("ic_raised_hand_list"),TranslateTo:y("ic_activity_24px"),Debug:y("ic_rulebook_16px"),Initial:y("coffee"),Update:y("ic_upload"),Locale:y("ic_locale_24px")}};const Rt={messageSpoofer:"69",copyEmbed:"1337",invisChat:"420",cutMessage:"512",dislate:"1002"},Pt={shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:.1,shadowRadius:4.65,elevation:8},Ft=(e,n)=>{v.open({content:n=="clipboard"?`Copied ${e} to clipboard.`:e,source:n=="clipboard"?u.Clipboard:u.Settings.Initial})},Mt=(e,n,a,o=186,i)=>D(()=>{let l=e.replace("#","");const m=(S,z,H)=>parseInt(S.substring(z[0],z[1]),H),r=m(l,[0,2],16),g=m(l,[2,4],16),w=m(l,[4,6],16);return(r+g+w)/(255*3)>o?a:n},[e,n,a,o],s,"checking if color should be light or dark at",i);var b={externalPlugins:Rt,shadow:Pt,displayToast:Ft,filterColor:Mt};const{native:J}=window.enmity;function Nt(){J.reload()}J.version,J.build,J.device,J.version;async function At(){await D(async function(){const e=`${N.download}?${Math.floor(Math.random()*1001)}.js`,n=await(await ze.get(e)).text,a=n.match(/\d\.\d\.\d+/g)[0],o=n.match(/patch-\d\.\d\.\d+/g)[0];return!a||!o?fe(s,[Y,N.build]):a!=Y?he(e,a,"version"):o!=N.build?he(e,o.split("-")[1],"build"):fe(s,[Y,N.build])},[N],s,"checking if latest version at","the async check for updates callback")}const he=(e,n,a)=>{F.show({title:"Update found",body:`A newer ${a} is available for ${s}. ${a=="build"?`
The version will remain at ${Y}, but the build will update to ${n}.`:""}
Would you like to install ${a} \`${n}\` now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>Ke(e,n,a)})},fe=(e,[n,a])=>{console.log(`[${e}] Plugin is on the latest update, which is version ${n} and build ${a}`),F.show({title:"Already on latest",body:`${e} is already updated to the latest version.
Version: \`${n}\`
Build: \`${a.split("-")[1]}\``,confirmText:"Okay"})};async function Ke(e,n,a){await D(async function(){window.enmity.plugins.installPlugin(e,({data:o})=>{o=="installed_plugin"||o=="overridden_plugin"?F.show({title:`Updated ${s}`,body:`Successfully updated to ${a} \`${n}\`. 
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Not now",onConfirm:()=>Nt()}):console.log(`[Dislate] Plugin failed to update to ${a} ${n}.`)})},[e,n,a],s,"installing plugin at","new version available")}var Bt={checkForUpdates:At,showUpdateDialog:he,noUpdates:fe,installPlugin:Ke},Je;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Je||(Je={}));var ne;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ne||(ne={}));var ae;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(ae||(ae={}));var Xe;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(Xe||(Xe={}));var X;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(X||(X={}));var Qe;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Qe||(Qe={}));var Ot=({option:e,channelId:n,channelName:a,debugOptions:o,onConfirmCallback:i})=>{const[l,m]=t.useState(U(s,e,!1)),r=M.createThemedStyleSheet({icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},itemDisabled:{color:d.ThemeColorMap.TEXT_MUTED},itemEnabled:{color:d.ThemeColorMap.INTERACTIVE_NORMAL}});return t.createElement(h,{key:e,label:e,onPress:()=>{U(s,e,!1)?A(s,e,!1):A(s,e,!0),m(U(s,e,!1))},onLongPress:async function(){await i(await x.debugInfo([e]),"single log")},leading:t.createElement(h.Icon,{style:r.icon,source:l?u.Settings.Toasts.Settings:u.Settings.Toasts.Failed}),trailing:()=>t.createElement(T,{style:[{paddingRight:10,paddingTop:5,paddingBottom:5},l?r.itemEnabled:r.itemDisabled]},o[e])})};const pe=window.enmity.modules.common.Components.General.Animated,jt=window.enmity.modules.common.Components.General.Easing;var Ze=({label:e,content:n,type:a})=>{var o;const i=M.createThemedStyleSheet({button:{width:"92%",borderRadius:10,marginLeft:"4%",marginRight:"4%",...b.shadow},text:{color:"#f2f2f2",textAlign:"left",letterSpacing:.25,padding:10},textHeader:{fontSize:20,fontFamily:d.Fonts.PRIMARY_BOLD},textContent:{fontSize:16,fontFamily:d.Fonts.PRIMARY_NORMAL},image:{width:25,height:25,borderRadius:4,position:"absolute",right:0,margin:10}}),l=t.useRef(new pe.Value(1)).current,m=()=>{const w=()=>pe.timing(l,{toValue:0,duration:250,useNativeDriver:!0,easing:jt.sin}).start();F.show({title:"Close Tip?",body:"You can either hide this information box forever, or just hide it until you open this page again.",confirmText:"Hide",cancelText:"Don't show again",onConfirm:()=>{w()},onCancel:async function(){await de.item({name:e,content:!0,type:"setting"},`storing dialog at ${e} in Dialog component`),w()}})},r={standard:{backgroundColor:"rgba(0, 0, 0, 0.5)",marginTop:20},floating:{position:"absolute",bottom:0,marginBottom:30,backgroundColor:"rgba(0, 0, 0, 0.8)"}},g={transform:[{scale:l}]};return E(s,e,!1)?t.createElement(t.Fragment,null):t.createElement(t.Fragment,null,t.createElement(pe.View,{style:g},t.createElement(R,{style:[i.button,(o=r[a])!=null?o:r.standard],onPress:m},t.createElement($,{style:{width:"100%",flexDirection:"row"}},t.createElement(Oe,{style:i.image,source:{uri:"https://i.imgur.com/rl1ga06.png"}})),t.createElement(T,{style:[i.text,i.textHeader]},e),t.createElement(T,{style:[i.text,i.textContent]},n))))},ye=({component:e})=>{const[n,a]=t.useState(),[o,i]=t.useState();return t.createElement(ut,{onTouchStart:l=>{a(l.nativeEvent.pageX),i(l.nativeEvent.pageY)},onTouchEnd:l=>{n-l.nativeEvent.pageX<-100&&o-l.nativeEvent.pageY<40&&o-l.nativeEvent.pageY>-40&&j.pop()}},e)},oe=({label:e,component:n})=>{const a=M.createThemedStyleSheet({text:{color:d.ThemeColorMap.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD,fontSize:12}});return t.createElement($,{style:{marginTop:10}},t.createElement(T,{style:[a.text,a.optionText]},e.toUpperCase()),n)};const Ut=Ue("StaticSearchBarContainer");var zt=({channelId:e,channelName:n,onConfirmCallback:a})=>{const[o,i]=t.useState([]),[l,m]=t.useState([]);t.useEffect(async function(){i(await x.fetchDebugArguments())},[]);const r=M.createThemedStyleSheet({button:{width:"90%",height:50,justifyContent:"center",alignItems:"center",backgroundColor:d.ThemeColorMap.HEADER_PRIMARY,borderRadius:10,marginLeft:"5%",marginRight:"5%",marginTop:20},text:{color:b.filterColor(d.ThemeColorMap.HEADER_PRIMARY[0],"#f2f2f2","#121212",.8,"buttons in debug info menu"),textAlign:"center",paddingLeft:10,paddingRight:10,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD},buttonText:{fontSize:16},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,...b.shadow}});return t.createElement(t.Fragment,null,t.createElement(Ut,{placeholder:"Search Options",onChangeText:g=>m(g)}),t.createElement(ye,{component:t.createElement($,{style:{marginBottom:100}},t.createElement(oe,{label:"Options",component:t.createElement(t.Fragment,null,t.createElement($,{style:r.container},f.mapItem(f.filterItem(Object.keys(o),g=>g.toLowerCase().includes(l)),(g,w,S)=>t.createElement(t.Fragment,null,t.createElement(Ot,{option:g,channelId:e,channelName:n,debugOptions:o,onConfirmCallback:a}),w!==S.length-1?t.createElement(O,null):null),"list of debug information options")))}),t.createElement(R,{style:r.button,onPress:async function(){await a(await x.debugInfo(Object.keys(o)),"full log")}},t.createElement(T,{style:[r.text,r.buttonText]},"Send All")),t.createElement(R,{style:r.button,onPress:async function(){const g=f.filterItem(Object.keys(o),w=>U(s,w,!1),"filtering chosen debug options");await a(await x.debugInfo(g),"partial log")}},t.createElement(T,{style:[r.text,r.buttonText]},"Send Message")),t.createElement(Ze,{label:"Information",content:`You can either tap on each item to toggle it and press "Send Message", or you can long-press on an item to only send that item.

To close this dialog, press on it.`,type:"standard"}))}))};const et=Ve.createStackNavigator();var be=({name:e="Page",component:n=$}={})=>{const a=M.createThemedStyleSheet({container:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,flex:.5},card:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_PRIMARY,color:d.ThemeColorMap.TEXT_NORMAL},header:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},text:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.PRIMARY_NORMAL,fontSize:16,marginLeft:16,backgroundColor:"transparent"}}),o=({onPress:i,title:l})=>t.createElement(R,{onPress:i},t.createElement(T,{style:a.text},l));return t.createElement(ht.NavigationContainer,null,t.createElement(et.Navigator,{initialRouteName:e,style:a.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:a.card,headerStyle:a.header,headerTitleContainerStyle:{color:d.ThemeColorMap.HEADER_PRIMARY},headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(et.Screen,{name:e,component:n,options:{headerTitleStyle:{color:"white",fontFamily:d.Fonts.PRIMARY_NORMAL},headerLeft:()=>t.createElement(o,{title:"Close",onPress:()=>{j.pop()}}),...Ve.TransitionPresets.ModalSlideFromBottomIOS}})))},G=["detect","amharic","arabic","aymara","assamese","akan","azerbaijani","belarusian","bulgarian","bambara","bengali","corsican","czech","bosnian","danish","catalan","valencian","german","ewe","divehi","dhivehi","maldivian","english","greek","estonian","esperanto","basque","spanish","castilian","finnish","french","persian","irish","galician","guarani","western_frisian","gujarati","gaelic","scottish_gaelic","hausa","croatian","hebrew","hindi","haitian","haitian_creole","armenian","indonesian","hungarian","igbo","icelandic","italian","georgian","javanese","japanese","korean","kazakh","kannada","afrikaans","central_khmer","welsh","kurdish","kirghiz","kyrgyz","latin","luxembourgish","letzeburgesch","ganda","lao","latvian","lingala","lithuanian","malagasy","macedonian","malayalam","maori","marathi","norwegian_bokm\xE5l","mongolian","burmese","maltese","nepali","malay","dutch","flemish","chichewa","chewa","nyanja","norwegian","oromo","oriya","panjabi","punjabi","polish","quechua","pushto","pashto","russian","sanskrit","romanian","moldavian","moldovan","slovenian","kinyarwanda","slovak","sinhala","sinhalese","samoan","shona","somali","serbian","albanian","swahili","southern_sotho","swedish","sundanese","tamil","tajik","telugu","tagalog","turkmen","tigrinya","thai","tsonga","sindhi","portuguese","twi","turkish","tatar","urdu","ukrainian","uighur","uyghur","uzbek","vietnamese","yiddish","xhosa","chinese_traditional","chinese_simplified","zulu","yoruba"],ie=["auto","am","ar","ay","as","ak","az","be","bg","bm","bn","co","cs","bs","da","ca","ca","de","ee","dv","dv","dv","en","el","et","eo","eu","es","es","fi","fr","fa","ga","gl","gn","fy","gu","gd","gd","ha","hr","he","hi","ht","ht","hy","id","hu","ig","is","it","ka","jv","ja","ko","kk","kn","af","km","cy","ku","ky","ky","la","lb","lb","lg","lo","lv","ln","lt","mg","mk","ml","mi","mr","nb","mn","my","mt","ne","ms","nl","nl","ny","ny","ny","no","om","or","pa","pa","pl","qu","ps","ps","ru","sa","ro","ro","ro","sl","rw","sk","si","si","sm","sn","so","sr","sq","sw","st","sv","su","ta","tg","te","tl","tk","ti","th","ts","sd","pt","tw","tr","tt","ur","uk","ug","ug","uz","vi","yi","xh","zh-tw","zh-cn","zu","yo"],tt,nt,at;const[Vt]=ee(P.byProps("setString")),ot=(e,n)=>({debug:async function(){const a=await x.debugInfo(Object.keys(await x.fetchDebugArguments()),"full log");return await new Promise(o=>{F.show({title:"Choose extra options",body:'You can customize the information sent with this command. If you do not want to customize the debug log, press "`Ignore`" instead to send the full log.',confirmText:"Customize",cancelText:"Ignore",onConfirm:()=>{const i=()=>t.createElement(zt,{channelId:e,channelName:n,onConfirmCallback:(l,m)=>{j.pop(),v.open({content:`Sent ${m} log in #${n}.`,source:u.Settings.Toasts.Settings}),o({content:l})}});j.push(be,{component:i,name:`${s}: Customize`})},onCancel:()=>{v.open({content:`Sent full log in #${n}.`,source:u.Settings.Toasts.Settings}),o({content:a})}})})},clearStores:async function(){var a;const o=(a=JSON.parse(await C.getItem("dislate_store_state")))!=null?a:[];return f.forItem(o,async function(i){i.type==="storage"?await C.removeItem(i.name):A(s,i.name,!1)},"clearing state store"),await C.removeItem("dislate_store_state"),await new Promise(async function(i){v.open({content:`Cleared all ${s} stores.`,source:u.Settings.Toasts.Settings}),i({})})},download:async function(){return await new Promise(a=>{Vt.setString(`${N.download}?${Math.floor(Math.random()*1001)}.js`),b.displayToast("download link","clipboard"),a({})})},Example:async function(){const a="Example Message. Enmity is a state or feeling of active opposition or hostility.",o=Math.floor(Math.random()*G.length),i=G[o],l=await te.string(a,{fromLang:"detect",toLang:i},Object.assign({},...G.map((m,r)=>({[m]:ie[r]}))));return await new Promise(m=>{F.show({title:"Are you sure?",body:`**This is a testing message.**
You are about to send the following:

**English:** ${a}

**${I.string(i)}:** ${l}

Are you sure you want to send this? :3`,confirmText:"Yep, send it!",cancelText:"Nope, don't send it",onConfirm:()=>{v.open({content:`Sent test message in #${n}.`,source:u.Translate}),m({content:`**[${s}] Test Message**

**English:** ${a}
**${I.string(i)}:** ${l}`})},onCancel:()=>{v.open({content:"Cancelled translated message request.",source:u.Cancel}),m({})}})})}}),Yt=f.mapItem(Object.keys(ot("8008135","placeholder")),e=>({name:I.string(e,!0),displayName:I.string(e,!0),value:e}),"debug options formatted as a command format");var Gt={id:`${(tt=s)==null?void 0:tt.toLowerCase()}`,name:`${(nt=s)==null?void 0:nt.toLowerCase()}`,displayName:`${(at=s)==null?void 0:at.toLowerCase()}`,description:`Choose from a list of options for debugging in ${s}.`,displayDescription:`Choose from a list of options for debugging in ${s}.`,type:ne.Chat,inputType:ae.BuiltInText,options:[{name:"type",displayName:"type",description:"The type of command to execute.",displayDescription:"The type of command to execute.",type:X.String,choices:[...Yt],required:!0}],execute:async function(e,n){var a;const o=f.findItem(e,m=>m.name=="type").value,i=ot(n.channel.id,n.channel.name),l=()=>{v.open({content:"Invalid command argument.",source:u.Clock})};return await((a=i[o])!=null?a:l)()}};function Ht(e,n,a,o){window.enmity.clyde.sendReply(e,n,a,o)}const qt=f.mapItem(f.filterItem(G,e=>e!=="detect","filter for everything except for detect"),e=>({name:I.string(e),displayName:I.string(e),value:e}),"language names");var Wt={id:"translate",name:"translate",displayName:"translate",description:`Send a message using ${s} in any language chosen, using the Google Translate API.`,displayDescription:`Send a message using ${s} in any language chosen, using the Google Translate API.`,type:ne.Chat,inputType:ae.BuiltInText,options:[{name:"text",displayName:"text",description:`The text/message for ${s} to translate. Please note some formatting of mentions and emojis may break due to the API.`,displayDescription:`The text/message for ${s} to translate. Please note some formatting of mentions and emojis may break due to the API.`,type:X.String,required:!0},{name:"language",displayName:"language",description:`The language that ${s} will translate the text into. This can be any language from the list, except "Detect".`,displayDescription:`The language that ${s} will translate the text into. This can be any language from the list, except "Detect".`,type:X.String,choices:[...qt],required:!0}],execute:async function(e,n){const a=f.findItem(e,r=>r.name=="text","translate text").value,o=f.findItem(e,r=>r.name=="language","translate language").value,i=Object.assign({},...G.map((r,g)=>({[r]:ie[g]}))),l=await te.string(a,{fromLang:E(s,"DislateLangFrom","detect"),toLang:o},i),m=await te.string(l,{fromLang:E(s,"DislateLangFrom","detect"),toLang:E(s,"DislateLangTo","english")},i);return!l||!m?(Ht(n.channel.id,`Failed to send message in #${n.channel.name}`),{}):await new Promise(r=>{F.show({title:"Are you sure?",body:`The message **about to be sent** is:
\`${l}\`

In **${I.string(E(s,"DislateLangTo","english"))}**, this will translate to:
\`${m}\`

${E(s,"DislateBothLangToggle",!1)?`**Note: Sending original and translated**
`:""}Are you sure you want to send this? :3`,confirmText:"Yep, send it!",cancelText:"Nope, don't send it",onConfirm:()=>{v.open({content:`Sent message in #${n.channel.name}, which was translated into ${I.string(o)}.`,source:u.Translate}),r({content:E(s,"DislateBothLangToggle",!1)?`${a}

${l}`:l})},onCancel:()=>{v.open({content:"Cancelled translated message request.",source:u.Cancel}),r({})}})})}},Kt=["auto","amh","ara","aym","asm","aka","aze","bel","bul","bam","ben","cos","cze","bos","dan","cat","cat","ger","ewe","div","div","div","eng","gre","est","epo","baq","spa","spa","fin","fre","per","gle","glg","grn","fry","guj","gla","gla","hau","hrv","heb","hin","hat","hat","arm","ind","hun","ibo","ice","ita","geo","jav","jpn","kor","kaz","kan","afr","khm","wel","kur","kir","kir","lat","ltz","ltz","lug","lao","lav","lin","lit","mlg","mac","mal","mao","mar","nob","mon","bur","mlt","nep","may","dut","dut","nya","nya","nya","nor","orm","ori","pan","pan","pol","que","pus","pus","rus","san","rum","rum","rum","slv","kin","slo","sin","sin","smo","sna","som","srp","alb","swa","sot","swe","sun","tam","tgk","tel","tgl","tuk","tir","tha","tso","snd","por","twi","tur","tat","urd","ukr","uig","uig","uzb","vie","yid","xho","chit","chis","zul","yor"];const se=window.enmity.modules.common.Components.General.Animated;var Jt=({language:e,languages:n})=>{const a=Object.assign({},...ie.map((w,S)=>({[w]:Kt[S]}))),o=t.useRef(new se.Value(1)).current,i=()=>se.spring(o,{toValue:1.05,duration:250,useNativeDriver:!0}).start(),l=()=>se.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start(),m={transform:[{scale:o}]},r=M.createThemedStyleSheet({container:{width:"95%",marginLeft:"2.5%",borderRadius:10,marginTop:15,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY}}),g=w=>{A(s,`DislateLang${E(s,"DislateLangFilter")?"To":"From"}`,w),v.open({content:`Set ${n[w].toUpperCase()} as Language to Translate ${E("Dislate","DislateLangFilter")?"to":"from"}.`,source:E(s,"DislateLangFilter")?u.Settings.TranslateTo:u.Settings.TranslateFrom}),j.pop()};return t.createElement(t.Fragment,null,t.createElement(t.Fragment,null,t.createElement(R,{onPress:()=>g(e),onLongPress:()=>g(e),onPressIn:i,onPressOut:l},t.createElement(se.View,{style:[m,r.container]},t.createElement(h,{label:I.string(e),subLabel:`Aliases: ${n[e]}, ${a[n[e]]}`,trailing:h.Arrow,leading:t.createElement(h.Icon,{style:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},source:e==E(s,`DislateLang${E(s,"DislateLangFilter")?"To":"From"}`)?u.Settings.Toasts.Settings:u.Add})})))))};const Xt=Ue("StaticSearchBarContainer");var it=({languages:e})=>{const[n,a]=t.useState([]);return t.createElement(t.Fragment,null,t.createElement(Xt,{placeholder:"Search Language",onChangeText:o=>a(o)}),t.createElement(ye,{component:t.createElement(t.Fragment,null,t.createElement($,{style:{marginBottom:15}},f.mapItem(f.filterItem(Object.keys(e),o=>o.toLowerCase().includes(n),"getting searched languages"),o=>E(s,"DislateLangFilter")&&o=="detect"?t.createElement(t.Fragment,null):t.createElement(Jt,{language:o,languages:e}),"listing different possible languages")))}),t.createElement(Ze,{label:"Important",content:`You can either press or long-press on an item to select it as the language to translate ${E(s,"DislateLangFilter")?"to":"from"}. Your current selected language has a \u2713 next to it.

To hide this dialog, press on it.`,type:"floating"}))};const re=window.enmity.modules.common.Components.General.Animated,[we,Qt]=ee(P.byProps("transitionToGuild"),P.byProps("setString"));var Zt=({name:e,version:n,plugin:a,authors:o})=>{const i=M.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...b.shadow},image:{width:75,height:75,borderRadius:10,...b.shadow},mainText:{opacity:.975,letterSpacing:.25},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:d.ThemeColorMap.HEADER_SECONDARY,fontSize:12.75}}),l=t.useRef(new re.Value(1)).current,m=()=>re.spring(l,{toValue:1.1,duration:10,useNativeDriver:!0}).start(),r=()=>re.spring(l,{toValue:1,duration:250,useNativeDriver:!0}).start(),g=()=>we.openURL(a.repo),w={transform:[{scale:l}]};return t.createElement(t.Fragment,null,t.createElement($,{style:i.container},t.createElement(R,{onPress:g,onPressIn:m,onPressOut:r},t.createElement(re.View,{style:w},t.createElement(Oe,{style:[i.image],source:{uri:"https://i.imgur.com/rl1ga06.png"}}))),t.createElement($,{style:i.textContainer},t.createElement(R,{onPress:()=>we.openURL(a.repo)},t.createElement(T,{style:[i.mainText,i.header]},e)),t.createElement($,{style:{flexDirection:"row"}},t.createElement(T,{style:[i.mainText,i.subHeader]},"A project by"),f.mapItem(o,(S,z,H)=>t.createElement(R,{onPress:()=>we.openURL(S.profile)},t.createElement(T,{style:[i.mainText,i.subHeader,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},S.name,z<H.length-1?",":null)))),t.createElement($,null,t.createElement(R,{style:{flexDirection:"row"},onPress:async function(){const S=await x.fetchDebugArguments();Qt.setString(await x.debugInfo(Object.keys(S))),b.displayToast("debug information","clipboard")}},t.createElement(T,{style:[i.mainText,i.subHeader]},"Version:"),t.createElement(T,{style:[i.mainText,i.subHeader,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},n))))))};const[en,tn]=ee(P.byProps("transitionToGuild"),P.byProps("setString"));var nn=({settings:e,manifest:{name:n,version:a,plugin:o,authors:i,release:l},languages:m})=>{const r=M.createThemedStyleSheet({icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:d.ThemeColorMap.TEXT_MUTED},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,...b.shadow},subheaderText:{color:d.ThemeColorMap.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:d.Fonts.PRIMARY_BOLD,fontSize:14}});return t.createElement(t.Fragment,null,t.createElement(ye,{component:t.createElement(t.Fragment,null,t.createElement(Zt,{name:n,version:a,plugin:o,authors:i}),t.createElement($,{style:{marginTop:20}},t.createElement(oe,{label:"Language",component:t.createElement(t.Fragment,null,t.createElement($,{style:r.container},t.createElement(h,{label:"Translate From",leading:t.createElement(h.Icon,{style:r.icon,source:u.Settings.TranslateFrom}),trailing:()=>{var g;return t.createElement(T,{style:r.item},(g=I.string(E(n,"DislateLangFrom","detect")))!=null?g:"N/A")},onPress:()=>{A(n,"DislateLangFilter",!1);const g=()=>t.createElement(it,{languages:m});j.push(be,{component:g,name:`${n}: Language From`})},onLongPress:()=>b.displayToast('Open a new page allowing you to choose a language that you can translate from. The default is "Detect".',"tooltip")}),t.createElement(O,null),t.createElement(h,{label:"Translate To",leading:t.createElement(h.Icon,{style:r.icon,source:u.Settings.TranslateTo}),trailing:()=>{var g;return t.createElement(T,{style:r.item},(g=I.string(E(n,"DislateLangTo","english")))!=null?g:"N/A")},onPress:()=>{A(n,"DislateLangFilter",!0);const g=()=>t.createElement(it,{languages:m});j.push(be,{component:g,name:`${n}: Language To`})},onLongPress:()=>b.displayToast('Open a new page allowing you to choose a language that you can translate to. The default is "English".',"tooltip")}),t.createElement(O,null),t.createElement(h,{label:"Abbreviate Language",leading:t.createElement(h.Icon,{style:r.icon,source:u.Retry}),subLabel:"Label language in a shorter form when translating (English \u279D EN).",onLongPress:()=>b.displayToast("Convert the full language name to an abbreviation when translating someone else's message. (test [English] \u279D test [EN])","tooltip"),trailing:t.createElement(ge,{value:e.getBoolean("DislateLangAbbr",!1),onValueChange:()=>{e.toggle("DislateLangAbbr",!1),v.open({content:`Successfully ${e.getBoolean("DislateLangAbbr",!1)?"enabled":"disabled"} language abbreviations.`,source:u.Settings.Toasts.Settings})}})}),t.createElement(O,null),t.createElement(h,{label:"Send Original",leading:t.createElement(h.Icon,{style:r.icon,source:u.Settings.Locale}),subLabel:"Send both the Original and Translated message when using /translate.",onLongPress:()=>b.displayToast("When using the /translate command, send both the original message and the translated message at once.","tooltip"),trailing:t.createElement(ge,{value:e.getBoolean("DislateBothLangToggle",!1),onValueChange:()=>{e.toggle("DislateBothLangToggle",!1),v.open({content:`Now sending ${e.getBoolean("DislateBothLangToggle",!1)?"original and translated":"only translated"} message.`,source:u.Settings.Toasts.Settings})}})})))}),t.createElement(oe,{label:"Utility",component:t.createElement(t.Fragment,null,t.createElement($,{style:r.container},t.createElement(h,{label:"Initialisation Toasts",leading:t.createElement(h.Icon,{style:r.icon,source:u.Settings.Initial}),subLabel:`Toggle initialisation toasts to display loading state of ${n}.`,onLongPress:()=>b.displayToast(`When Enmity is first started, show toasts based on ${n}'s current state (starting, failed, retrying, etc)`,"tooltip"),trailing:t.createElement(ge,{value:e.getBoolean("toastEnable",!1),onValueChange:()=>{e.toggle("toastEnable",!1),v.open({content:`Successfully ${e.getBoolean("toastEnable",!1)?"enabled":"disabled"} Load Toasts.`,source:u.Settings.Toasts.Settings})}})}),t.createElement(O,null),t.createElement(h,{label:"Copy Debug Info",subLabel:`Copy useful debug information like version and build of ${n} to clipboard.`,onLongPress:()=>b.displayToast(`Copy the full debug log to clipboard including ${n}'s Version, Build, and Release, Enmity's Version and Build, etc.`,"tooltip"),leading:t.createElement(h.Icon,{style:r.icon,source:u.Copy}),trailing:h.Arrow,onPress:async function(){const g=await x.fetchDebugArguments();tn.setString(await x.debugInfo(Object.keys(g))),b.displayToast("debug information","clipboard")}}),t.createElement(O,null),t.createElement(h,{label:"Clear Stores",subLabel:`Void most of the settings and stores used throughout ${n} to store data locally.`,onLongPress:()=>b.displayToast(`Clear stores and settings throughout ${n} including the settings to hide popups forever and the list of device codes.`,"tooltip"),leading:t.createElement(h.Icon,{style:r.icon,source:u.Delete}),trailing:h.Arrow,onPress:async function(){var g;const w=(g=JSON.parse(await C.getItem("dislate_store_state")))!=null?g:[];f.forItem(w,async function(S){S.type==="storage"?await C.removeItem(S.name):A(n,S.name,!1)},"clearing state store"),await C.removeItem("dislate_store_state"),v.open({content:`Cleared all ${n} stores.`,source:u.Settings.Toasts.Settings})}})))}),t.createElement(oe,{label:"Source",component:t.createElement(t.Fragment,null,t.createElement($,{style:r.container},t.createElement(h,{label:"Check for Updates",subLabel:`Search for any ${n} updates and notify you if an update is available.`,onLongPress:()=>b.displayToast(`Search GitHub for any new version or build of ${n} and prompts you to update, and then prompts you to restart Enmity afterwards.`,"tooltip"),leading:t.createElement(h.Icon,{style:r.icon,source:u.Settings.Update}),trailing:h.Arrow,onPress:async function(){await Bt.checkForUpdates()}}),t.createElement(O,null),t.createElement(h,{label:"Source",subLabel:`Open the repository of ${n} externally.`,onLongPress:()=>b.displayToast(`Opens the repository of ${n} on GitHub in an external page to view any source code of the plugin.`,"tooltip"),leading:t.createElement(h.Icon,{style:r.icon,source:u.Open}),trailing:h.Arrow,onPress:()=>{en.openURL(o.repo)}})))})),t.createElement(T,{style:r.subheaderText},`Build: (${o.build.split("-")[1]}) Release: (${l})`))}))};const[st,an,on]=ee(P.byProps("openLazy","hideActionSheet"),P.byProps("getChannel","getDMFromUserId"),P.byName("Icon")),ve=ft("dislate"),Ee=Object.assign({},...G.map((e,n)=>({[e]:ie[n]})));let le=[{invalid_id:"acquite sucks"}];const sn={...p,commands:[],onStart(){this.commands=[Gt,Wt];let e=0;const n=3;async function a(){var o;try{e++;const i=je("getMessage","getMessages"),l=je("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue");let m=U(p.name,"toastEnable",!1);await qe.isCompatibleDevice();for(const r of["MESSAGE_UPDATE"])try{l==null||l.dispatch({type:r,message:{}})}catch(g){console.error(`[${p.name} Local Error When Waking Up FluxDispatcher ${g}]`)}console.log(`[${p.name}] delayed start attempt ${e}/${n}.`),m&&((o=v)==null||o.open({content:`[${p.name}] start attempt ${e}/${n}.`,source:u.Debug}));try{ve.before(st,"openLazy",(r,[g,w],S)=>{w==="MessageLongPressActionSheet"&&g.then(z=>{const H=ve.after(z,"default",(rn,q,B)=>{var Se,Te,$e,De,Ie,Le,Ce,xe,_e,ke,Re,Pe,Fe,Me,Ne,Ae,Be;H();let Q="Translate",Z=0;if(!(B!=null&&B.props))return console.log(`[${p.name} Local Error: Property "props" Does not Exist on "res"]`),B;let W=(Ie=(De=($e=(Te=(Se=B==null?void 0:B.props)==null?void 0:Se.children)==null?void 0:Te.props)==null?void 0:$e.children)==null?void 0:De.props)==null?void 0:Ie.children[1];if(!W)return console.log(`[${p.name} Local Error: 'finalLocation' seems to be undefined!]`),B;f.forItem(Object.values(b.externalPlugins),k=>{f.findItem(W,L=>{if(L.key!==b.externalPlugins.dislate)return L.key===k},"external plugin list")&&Z++},"looping through external plugin keys"),f.findItem(W,k=>{var L;return((L=k.props)==null?void 0:L.message)==="Reply"},"reply button")&&Z++,f.findItem(W,k=>{var L;return((L=k.props)==null?void 0:L.message)==="Edit Message"},"edit message button")&&Z++;const _=i.getMessage((Ce=(Le=q[0])==null?void 0:Le.message)==null?void 0:Ce.channel_id,(_e=(xe=q[0])==null?void 0:xe.message)==null?void 0:_e.id);if(!(_!=null&&_.content)&&!((Re=(ke=q[0])==null?void 0:ke.message)!=null&&Re.content))return console.log(`[${p.name}] No message content.`),B;const ce=(Me=_==null?void 0:_.id)!=null?Me:(Fe=(Pe=q[0])==null?void 0:Pe.message)==null?void 0:Fe.id,rt=(Be=_==null?void 0:_.content)!=null?Be:(Ae=(Ne=q[0])==null?void 0:Ne.message)==null?void 0:Ae.content,me=f.findItem(le,k=>Object.keys(k)[0]===ce,"cache object");Q=me?"Revert":"Translate";const lt=t.createElement(h,{key:b.externalPlugins.dislate,label:Q,leading:t.createElement(on,{source:Q==="Translate"?u.Translate:u.Revert}),onPress:()=>{const k=E(p.name,"DislateLangFrom","detect"),L=E(p.name,"DislateLangTo","english"),K=Q==="Translate";te.string(_.content,{fromLang:k,toLang:L},Ee,!K).then(ct=>{const mt={type:"MESSAGE_UPDATE",message:{..._,content:`${K?ct:me[ce]} ${K?`\`[${U(p.name,"DislateLangAbbr",!1)?Ee[L].toUpperCase():I.string(L)}]\``:""}`,guild_id:an.getChannel(_.channel_id).guild_id},log_edit:!1};l.dispatch(mt),v.open({content:K?`Modified message to ${I.string(E(p.name,"DislateLangTo","english"))}.`:"Reverted message back to original state.",source:u.Translate}),K?le.unshift({[ce]:rt}):le=f.filterItem(le,gt=>gt!==me,"cached data override")}),st.hideActionSheet()}});f.insertItem(W,lt,Z,"insert translate button")})})})}catch(r){console.error(`[${p.name}] Local ${r} At Intermediate Level`),m&&v.open({content:`[${p.name}] failed to open action sheet.`,source:u.Retry})}}catch(i){console.error(`[${p.name}] Local ${i} At Top Level`);let l=U(p.name,"toastEnable",!1);if(e<n){const m=`[${p.name}] failed to initialise. Trying again in ${e}0s.`;console.warn(m),l&&v.open({content:m,source:u.Retry}),setTimeout(a,e*1e4)}else{const m=`[${p.name}] failed to initialise. Giving up.`;console.error(m),l&&v.open({content:m,source:u.Failed})}}}a()},onStop(){ve.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){return t.createElement(nn,{settings:e,manifest:{name:p.name,version:p.version,plugin:p.plugin,authors:p.authors,release:p.release},languages:Ee})}};dt(sn);
