const P=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const g=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const A=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const L=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch,e.Text,e.TextInput,e.TouchableHighlight,e.TouchableOpacity,e.TouchableWithoutFeedback,e.Touchable,e.View,e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox;const D=e.FormDivider;e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const i=e.FormRow,b=e.FormSection;e.FormSelect,e.FormSubLabel;const I=e.FormSwitch;e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;function N(o){window.enmity.plugins.registerPlugin(o)}function l(o){return window.enmity.assets.getIDByName(o)}const s={byProps:(...o)=>window.enmity.modules.filters.byProps(...o),byName:(o,t)=>window.enmity.modules.filters.byName(o,t),byTypeName:(o,t)=>window.enmity.modules.filters.byTypeName(o,t),byDisplayName:(o,t)=>window.enmity.modules.filters.byDisplayName(o,t)};function h(...o){return window.enmity.modules.bulk(...o)}window.enmity.modules.common;function R(o){return window.enmity.patcher.create(o)}var r="Dislate",p="1.0.7",_="Translates text into a desired language.",S="development",k=[{name:"acquite",id:"581573474296791211"}],x="#ff1f84",B={name:r,version:p,description:_,release:S,authors:k,color:x};const[V,M]=h(s.byProps("transitionToGuild"),s.byProps("setString"));var $=({settings:o})=>{const t=l("ic_selection_checked_24px"),m=A.createThemedStyleSheet({icon:{color:P.ThemeColorMap.INTERACTIVE_NORMAL}});return n.createElement(n.Fragment,null,n.createElement(L,null,n.createElement(b,{title:"Disable Entire Plugin"},n.createElement(i,{label:"Disable Plugin",leading:n.createElement(i.Icon,{style:m.icon,source:l("ic_rulebook_16px")}),trailing:n.createElement(I,{value:o.getBoolean("masterDisable",!1),onValueChange:()=>{o.toggle("masterDisable",!1),g.open({content:`Successfully ${o.getBoolean("masterDisable",!1)?"disabled":"enabled"} ${r}.`,source:t})}})})),n.createElement(D,null),n.createElement(b,{title:"Source Code"},n.createElement(i,{label:"Download",subLabel:`Copy the link of ${r} to Clipboard`,leading:n.createElement(i.Icon,{style:m.icon,source:l("toast_copy_link")}),trailing:i.Arrow,onPress:()=>{M.setString("https://raw.githubusercontent.com/acquitelol/dislate/main/dist/Dislate.js"),g.open({content:"Copied to clipboard",source:l("pending-alert")})}}),n.createElement(i,{label:"Source",subLabel:`Open the Repo of ${r} Externally`,leading:n.createElement(i.Icon,{style:m.icon,source:l("ic_leave_stage")}),trailing:i.Arrow,onPress:()=>{V.openURL("https://github.com/acquitelol/dislate")}})),n.createElement(i,{label:`Plugin Version: ${p}
Release Channel: ${S}`})))};function z(o,t,m){return window.enmity.utilities.findInReactTree(o,t,m)}const[U,F,j]=h(s.byProps("setString"),s.byProps("openLazy","hideActionSheet"),s.byProps("getLastSelectedChannelId")),c=R("dislate"),q={...B,onStart(){const[o,t]=n.useState(),[m,T]=n.useState();c.before(F,"openLazy",(O,[f,v],G)=>{v==="MessageLongPressActionSheet"&&f.then(C=>{c.after(C,"default",(H,d,u)=>{t(d[0].message.channel_id),T(d[0].message.content);const a=z(u,w=>{var y;return(y=w.find)==null?void 0:y.call(w,E=>Array.isArray(E))});if(!a||!a[1])return u;a[1].unshift(n.createElement(i,{leading:n.createElement(i.Icon,{source:l("img_nitro_star")}),label:"Translate",onPress:()=>{console.log(`${m}`),F.hideActionSheet()}}))})})})},onStop(){c.unpatchAll()},getSettingsPanel({settings:o}){return n.createElement($,{settings:o})}};N(q);
